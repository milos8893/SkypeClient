// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Skype.Client.UI.Data;

namespace Skype.Client.UI.Migrations
{
    [DbContext(typeof(FilterDbContext))]
    [Migration("20211221114007_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("Skype.Client.Profile", b =>
                {
                    b.Property<int>("ProfileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("TargetLink")
                        .HasColumnType("TEXT");

                    b.HasKey("ProfileId");

                    b.ToTable("Profile");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Profile");
                });

            modelBuilder.Entity("Skype.Client.UI.Models.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Trigger")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Filters");
                });

            modelBuilder.Entity("Skype.Client.UI.Models.DestinationProfileVM", b =>
                {
                    b.HasBaseType("Skype.Client.Profile");

                    b.Property<int>("FilterId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("FilterId");

                    b.HasDiscriminator().HasValue("DestinationProfileVM");
                });

            modelBuilder.Entity("Skype.Client.UI.Models.SourceProfileVM", b =>
                {
                    b.HasBaseType("Skype.Client.Profile");

                    b.Property<int>("FilterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SourceProfileVM_FilterId");

                    b.HasIndex("FilterId");

                    b.HasDiscriminator().HasValue("SourceProfileVM");
                });

            modelBuilder.Entity("Skype.Client.UI.Models.DestinationProfileVM", b =>
                {
                    b.HasOne("Skype.Client.UI.Models.Filter", "Filter")
                        .WithMany("DestinationChats")
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filter");
                });

            modelBuilder.Entity("Skype.Client.UI.Models.SourceProfileVM", b =>
                {
                    b.HasOne("Skype.Client.UI.Models.Filter", "Filter")
                        .WithMany("SourceChats")
                        .HasForeignKey("FilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filter");
                });

            modelBuilder.Entity("Skype.Client.UI.Models.Filter", b =>
                {
                    b.Navigation("DestinationChats");

                    b.Navigation("SourceChats");
                });
#pragma warning restore 612, 618
        }
    }
}
